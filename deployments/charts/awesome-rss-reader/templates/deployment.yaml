apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "awesome-rss-reader.podname" (set . "Name" "api") }}
  labels:
    {{- include "awesome-rss-reader.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 25%
  selector:
    matchLabels:
      {{- include "awesome-rss-reader.selectorLabels" (set $ "Deployment" "api") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "awesome-rss-reader.selectorLabels" (set $ "Deployment" "api") | nindent 8 }}
    spec:
      {{- with $.Values.image.pullSecrets }}
      imagePullSecrets:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.api.terminationGracePeriodSeconds }}
      containers:
        - name: {{ include "awesome-rss-reader.podname" (set . "Name" "api") }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [api]
          ports:
            - name: uvicorn
              containerPort: {{ .Values.api.targetPort }}
              protocol: TCP
          env:
          {{- range $key, $val := .Values.api.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          {{- range $key, $val := .Values.sharedEnv }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          envFrom:
          {{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ tpl .name $ }}
                optional: {{ .optional | default false }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "awesome-rss-reader.podname" (set . "Name" "scheduler") }}
  labels:
    {{- include "awesome-rss-reader.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.scheduler.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "awesome-rss-reader.selectorLabels" (set $ "Deployment" "scheduler") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "awesome-rss-reader.selectorLabels" (set $ "Deployment" "scheduler") | nindent 8 }}
    spec:
      {{- with $.Values.image.pullSecrets }}
      imagePullSecrets:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "awesome-rss-reader.podname" (set . "Name" "scheduler") }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [scheduler]
          env:
          {{- range $key, $val := .Values.scheduler.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          {{- range $key, $val := .Values.sharedEnv }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          envFrom:
          {{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ tpl .name $ }}
                optional: {{ .optional | default false }}
          {{- end }}
          resources:
            {{- toYaml .Values.scheduler.resources | nindent 12 }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "awesome-rss-reader.podname" (set . "Name" "worker") }}
  labels:
    {{- include "awesome-rss-reader.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.worker.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "awesome-rss-reader.selectorLabels" (set $ "Deployment" "worker") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "awesome-rss-reader.selectorLabels" (set $ "Deployment" "worker") | nindent 8 }}
    spec:
      {{- with $.Values.image.pullSecrets }}
      imagePullSecrets:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "awesome-rss-reader.podname" (set . "Name" "worker") }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [worker]
          env:
          {{- range $key, $val := .Values.worker.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          {{- range $key, $val := .Values.sharedEnv }}
            - name: {{ $key }}
              value: "{{ $val }}"
          {{- end }}
          envFrom:
          {{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ tpl .name $ }}
                optional: {{ .optional | default false }}
          {{- end }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
